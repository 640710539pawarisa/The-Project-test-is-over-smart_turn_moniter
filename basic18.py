#Demo สร้างเส้นเชื่อมโยง(ที่เราเอาเมาส์ไปคลิก) basic18

import cv2#เรียกใช้ cv2

import numpy #เรียกใช้ numpy

img = numpy.zeros([500,500,3], numpy.uint8)#สร้างภาพขึ้นมาเองโดยไม่อ่านภาพอื่นเข้ามา

    #**เราจะสร้างเส้นเชื่อมโยง(ที่เราเอาเมาส์ไปคลิก)2 ตำแหน่ง ที่ลากโยงกัน เราเลยตัองสร้างตัวแปรเพื่อเก็บตำแหน่งที่เราคลิกเมาส์ ทั้ง2ให้มันเชื่อมโยงกันได้
poins = []

#ฟังก์ชันที่จะทำงานกับ Mouse Event
def clickPosition(event,x,y,flags,param):
    if event == cv2.EVENT_LBUTTONDOWN: #ใช้เมาส์ซ้ายเพื่อคลิกเมาส์
        #สร้างจุด 1 จุด
        cv2.circle(img,(x,y),10,(0,0,255),5)#cv2.circle(ภาพที่จะวาดวงกลม,ตำแหน่งจุดศูนย์กลางวงกลม(x,y),รัศมี,สี,ความหนา)
        
    
        #เก็บตำแหน่งที่เราคลิกเมาส์ไว้ในตัวแปร poins
        poins.append((x,y))#เก็บตำแหน่งที่เราคลิกเมาส์ไว้ในตัวแปร poins 
        
        
        #โดยเราจะเอาตัวแปร poins มาเข้าเงื่อนไขว่า ที่เราคลิกมีมากกว่าเท่ากับ 2จุดหรือเปล่า ถ้าใช่ เราจะให้มันเส้นเชื่อมโยงกัน ระหว่าง 2จุดที่เราคลิกไว้ 
        
        #ในโค้ด 2 บรรทัด เชื่อมได้แค่ จุด 1และ 2ที่เราคลิก เชื่อมกันได้แค่่ 1 เส้น และ พอคลิก จุดที่ 3 , 4 จุดเราจะไม่สามารถเชื่อมกันได้
        # if len(poins) >= 2:#ถ้าเราคลิกมีมากกว่าเท่ากับ 2จุดหรือเปล่า
        #     cv2.line(img,poins[0],poins[1],(0,255,0),10)#cv2.line(ภาพที่จะวาดเส้นตรง,จุดเริ่มต้น,จุดสิ้นสุด,สี,ความหนาเงง
        # print(poins)
        
        
        #โดยแก้ไขดังนี้ *****
        if len(poins) >= 2:#ถ้าเราคลิกมีมากกว่าเท่ากับ 2จุดหรือเปล่า
            print(poins[-1])
            print(poins[-2])
            cv2.line(img,poins[-1],poins[-2],(0,255,0),10) 
            
        #แสดงภาพ
        cv2.imshow("Output", img)
#แสดงภาพ
cv2.imshow("Output", img)

#เรียกใช้ฟังก์ชันที่จะทำงานกับ Mouse Event
cv2.setMouseCallback("Output", clickPosition)#cilckPosition คือฟังก์ชันที่เราจะใช้ทำงาน คือฟังก์ชันเมาส์ที่เราใช้คลิก
cv2.waitKey(0)#รอให้ผู้ใช้งานกดปุ่มเพื่อปิดหน้าต่าง
cv2.destroyAllWindows()#ปิดหน้าต่าง