#Demo สร้างเส้นเชื่อมโยง(ที่เราเอาเมาส์ไปคลิก) basic18

import cv2#เรียกใช้ cv2

import numpy #เรียกใช้ numpy

img = cv2.imread("image/Klage.jpeg") #อ่านภาพ
# img = numpy.zeros([500,500,3], numpy.uint8)#สร้างภาพขึ้นมาเองโดยไม่อ่านภาพอื่นเข้ามา (ลองทำ)

    #**เราจะสร้างเส้นเชื่อมโยง(ที่เราเอาเมาส์ไปคลิก)2 ตำแหน่ง ที่ลากโยงกัน เราเลยตัองสร้างตัวแปรเพื่อเก็บตำแหน่งที่เราคลิกเมาส์ ทั้ง2ให้มันเชื่อมโยงกันได้
poins = []#สร้างตัวแปรเพื่อเก็บตำแหน่งที่เราคลิกเมาส์

#ฟังก์ชันที่จะทำงานกับ Mouse Event
def clickPosition(event,x,y,flags,param):
    if event == cv2.EVENT_LBUTTONDOWN: #ใช้เมาส์ซ้ายเพื่อคลิกเมาส์
        #สร้างจุด 1 จุด
        cv2.circle(img,(x,y),10,(0,0,255),5)#cv2.circle(ภาพที่จะวาดวงกลม,ตำแหน่งจุดศูนย์กลางวงกลม(x,y),รัศมี,สี,ความหนา)
        
    
        #เก็บตำแหน่งที่เราคลิกเมาส์ไว้ในตัวแปร poins ในรูปแบบ list , append คือการเพิ่มข้อมูลใน list
        poins.append((x,y))#เก็บตำแหน่งที่เราคลิกเมาส์ไว้ในตัวแปร poins  สรุปคือเอาไว้เก็บตำแหน่งที่เราคลิกเมาส์ หรือตำแหน่งที่จุดอยู่
        
        
        #โดยเราจะเอาตัวแปร poins มาเข้าเงื่อนไขว่า ที่เราคลิกมีมากกว่าเท่ากับ 2จุดหรือเปล่า ถ้าใช่ เราจะให้มันเส้นเชื่อมโยงกัน ระหว่าง 2จุดที่เราคลิกไว้ 
        
        #ในโค้ด 2 บรรทัด เชื่อมได้แค่ จุด 1และ 2ที่เราคลิก เชื่อมกันได้แค่่ 1 เส้น และ พอคลิก จุดที่ 3 , 4 จุดเราจะไม่สามารถเชื่อมกันได้
        # if len(poins) >= 2:#ถ้าเราคลิกมีมากกว่าเท่ากับ 2จุดหรือเปล่า
        #   cv2.line(img,poins[0],poins[1],(0,255,0),10)#cv2.line(ภาพที่จะวาดเส้นตรง,จุดเริ่มต้น,จุดสิ้นสุด,สี,ความหนาเงา) แต่ img.points[0] เราไม่ได้ใช้ 
        ## note ต่อพิ่มตัวอื่นๆ คือตัวหลัง เราจะใช้ img.points[1] และ img.points[2] เป็นตัวแรกและถัดมา
        # print(poins)
        
        
        #โดยแก้ไขดังนี้ *****
        #จากที่เรานับจาก 0 เป็นตัวแรก ให้เรานับจาก -1 เป็นตัวแรก (นับถอยหลัง )หรือ เราจะไล่index ใหม่ที่ก่อนหน้านี้เราไล่จากหน้าไปหลัง ให้ไล่จากหลังไปหน้าแทน 
        # เลย set เลข index เป็น ติดลบ เพื่อที่จะให้มัน linkหากัน
        if len(poins) >= 2:#ถ้าเราคลิกมีมากกว่าเท่ากับ 2จุดหรือเปล่า , len คือการนับจํานวนจุดที่เราคลิกไว้ หรือความยาวของ list poins
            
            #print 2 บรรทัดนี้ไม่จำเป็นต้องเขียน เราเขียนเพื่ออธิบายว่าคลิกที่ไหนบ้าง ผลจะออกทางหน้า output 
            print("[-1] = " ,poins[-1]) #ตำแหน่งที่ -1 คือตัวที่ 2 หรือจุดที่ 2 เพราะมันจะนับถอยหลังจาก -2 มา
            print("[-2] = " ,poins[-2]) #ตำแหน่งที่ -2 คือตัวแรก เพราะมันจะนับถอยหลัง และมันจะวนloopโดยตำแน่งที่คลิกล่าสุดนั้น จะเป็น -1 (นับเป็นจุดที่2ที่เราคลิก) 
            #และต่อมาเราคลิก -2(นับเป็นจุดที่3) จะเป็นทั้งจุดแรกและ จุดที่เราคลิกเพิ่ม มาต่อ เพื่อให้มันเชื่อมกันไปเรื่อยๆ  วนไปเรื่อยๆ
            cv2.line(img,poins[-2],poins[-1],(0,255,0),10)#cv2.line(ภาพที่จะวาดเส้นตรง,จุดเริ่มต้น,จุดสิ้นสุด,สี,ความหนา)หรือ สร้างเส้นตรงขึ้นมาหรือคือเส้นเชื่อม 
            
        #แสดงภาพ
        cv2.imshow("Output", img)
#แสดงภาพ
cv2.imshow("Output", img)

#เรียกใช้ฟังก์ชันที่จะทำงานกับ Mouse Event
cv2.setMouseCallback("Output", clickPosition)#cilckPosition คือฟังก์ชันที่เราจะใช้ทำงาน คือฟังก์ชันเมาส์ที่เราใช้คลิก
cv2.waitKey(0)#รอให้ผู้ใช้งานกดปุ่มเพื่อปิดหน้าต่าง
cv2.destroyAllWindows()#ปิดหน้าต่าง