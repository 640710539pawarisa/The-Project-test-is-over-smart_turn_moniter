#ตรวจจับกลุ่มวัตถุจากสี basic19
#วัตถุนั้นๆอยู่ตำแหน่งใดบ้างแยกแต่ละสี เช่น ลูกบอลสีแดง อยู่ตำแหน่งใดบ้าง ลูกบอลสีเขียว อยู่ตำแหน่งใดบ้าง

import cv2
import numpy #เรียกใช้ numpy **สำคัญ**เพราะเราทำอาเรย์เพื่อเก็บตำแหน่งที่ตรวจจับวัตถุได้

while True : #ใช้ while เพื่อให้หน้าต่างไม่ปิดอัตโนมัติ 
    img = cv2.imread("image/ballcolor.jpg") #อ่านภาพ
    img=cv2.resize(img,(400,400))#ปรับขนาดภาพ
    
    #ช่วงของสี ยกตัวอย่างแค่ สีเขียว
    #lower = numpy.array(B,G,R) #ช่วงสีที่เข้มที่สุด หรือ สีต่ําที่สุด
    #upper = numpy.array(B,G,R) #ช่วงสีที่เจือจางที่สุด หรือ สีสูงที่สุด
    lower = numpy.array([5,111,10]) #ตัวเลขในอาเรย์คือ BGR ที่เราไปเลือกมาจากรูปภาพที่เลือกมาเราสามารถดูค่าความเข้มของสีได้จากรูปแล้วลองจิ้มเปิดดูสีในPhotoshopดูได้
    upper =  numpy.array([124,255,133])
    
    #เปรียบเทียบช่วงสี
    mask = cv2.inRange(img, lower, upper) #ตรวจจับวัตถุจากสี , mask คือเป็นตัวแปรที่เก็บวัตถุที่ตรวจจับได้ ,inRange คือการเปรียบเทียบช่วงสี ว่าแบบอยู่ช่วงสีนี้ไหม
    #note : img คือ นำภาพเข้ามาด้วย , lower คือช่วงสีที่เข้มที่สุด , upper คือช่วงสีที่เจือจางที่สุด
    
    
    #ถัดมาเราจะทำให้ภาพที่แสดงที่หน้าต่าง2 คือภาพขาวดำ โดย ขาวคือวัตถุที่เราตรวจจับได้ และดําคือวัตถุที่เราไม่ตรวจจับได้ 
    #---->เราจะเอากลุ่มสีที่เราตรวจจับได้มา(ส่วนที่เป้นสีขาว) มาใส่สีตามต้นฉบับ และเอากลุ่มสีที่เราไม่ตรวจจับได้มา(ส่วนที่เป้นสีดํา) มาใส่สีดํา
    result = cv2.bitwise_and(img, img, mask=mask)# result คือ ตัวแปรที่เก็บภาพที่เราตรวจจับได้,img คือ พารามิเตอร์ 2ตัวแรก หรือ ภาพที่เราอ่านมา , mask=mask คือเป็นเงื่อนไขที่เราตรวจจับวัตถุจากสีได้
    #cv2.bitwise_and คือการกลับเลขที่เป็นฐาน 2 หรือเป็นการดำเนินการระดับ bit เป็นเลข binary 0 และ 1(0 คือสีดํา 1 คือสีขาว) ,
# | องค์ประกอบ   | ความหมาย                                                    
# | ----------- | ----------------------------------------------------------- 
# | `img, img`  | คือเอาภาพต้นฉบับมาเปรียบเทียบกับตัวเอง (bitwise AND)        
# | `mask=mask` | กำหนดว่าควรให้ผลลัพธ์เฉพาะจุดที่ `mask` มีค่า 255 (หรือขาว) 
# | `result`    | คือภาพใหม่ที่แสดงเฉพาะบริเวณที่ผ่านการกรองจาก mask          

    
    if cv2.waitKey(1) & 0xFF == ord("q"): #ถ้ากด q ให้หน้าต่างปิดอัตโนมัติ
        break
    
    #แสดงภาพต้นแบบ
    cv2.imshow("Original", img) #หน้าต่างที่1
    #"Original" คือชื่อหน้าต่าง หรือ window , img คือภาพ 
    
    #แสดงภาพตรวจจับวัตถุจากสี หรือ หน้าต่างเปรียบเทียบวัตถุจากสี
    cv2.imshow("Mask",mask)#หน้าต่างที่2
    
    #แสดงภาพผลลัพธ์สีที่เราไปตรวจจับมา ,ผลลัพธ์จากการเปรียบเทียบวัตถุจากสี
    cv2.imshow("Result", result) #หน้าต่างที่3
    
    #****
    #ภาพที่แสดงออกมาทั้ง2หน้าต่าง จะมีภาพต้นฉบับ และภาพตรวจจับวัตถุจากสี มันแสดงเป็นภาพ ขาวดำ 
    #-ต่อ โดย สีขาว คือตำแหน่งที่แสดงผลที่เรา mark ไว้ เราจะให้มันแสดงเป็นสีขาวในหน้าต่างที่ 2แต่ในหน้าต่างที่ 3เราจะแสดงเป้นสีตามต้นฉบับ
    # - ต่อ และสีดํา คือตำแหน่งที่ไม่ตรวจจับวัตถุ หรือ ลบที่นั้นเอง 
    # - ต่อ โดยที่เราทำจะตรวจจับแค่สีเขียวก่อน โดยที่ mark สีเขียว หน้าต่างแสดงผล จะแสดงเป้น สีขาว นอกเหนือจากนั้นก็จะ ลบทิ้งกลายเป็นสีดำ
    
cv2.destroyAllWindows() #ปิดหน้าต่างโดยการกด q